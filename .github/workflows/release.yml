name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: linux
            goarch: 386
            suffix: linux-386
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: linux-armv7

          # macOS
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

          # Windows
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe
          - goos: windows
            goarch: 386
            suffix: windows-386.exe

          # FreeBSD
          - goos: freebsd
            goarch: amd64
            suffix: freebsd-amd64
          - goos: freebsd
            goarch: arm64
            suffix: freebsd-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
          CGO_ENABLED: 0
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          BINARY_NAME=cc-statusline-$VERSION-${{ matrix.suffix }}
          go build -ldflags="-s -w -X main.version=$VERSION" -o $BINARY_NAME .

          # Create checksums
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            sha256sum $BINARY_NAME > $BINARY_NAME.sha256
          else
            shasum -a 256 $BINARY_NAME > $BINARY_NAME.sha256
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./cc-statusline-${{ github.event.release.tag_name }}-${{ matrix.suffix }}
            ./cc-statusline-${{ github.event.release.tag_name }}-${{ matrix.suffix }}.sha256

  create-homebrew-formula:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Generate Homebrew Formula
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          cat > cc-statusline.rb << EOF
          class CcStatusline < Formula
            desc "Statusline tool for Claude Code showing session info, Git status, and PR details"
            homepage "https://github.com/iskorotkov/cc-statusline"
            version "$VERSION"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-darwin-arm64"
                sha256 "PLACEHOLDER_DARWIN_ARM64_SHA256"
              else
                url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-darwin-amd64"
                sha256 "PLACEHOLDER_DARWIN_AMD64_SHA256"
              end
            end

            on_linux do
              if Hardware::CPU.arm?
                if Hardware::CPU.is_64_bit?
                  url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-linux-arm64"
                  sha256 "PLACEHOLDER_LINUX_ARM64_SHA256"
                else
                  url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-linux-armv7"
                  sha256 "PLACEHOLDER_LINUX_ARMV7_SHA256"
                end
              else
                if Hardware::CPU.is_64_bit?
                  url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-linux-amd64"
                  sha256 "PLACEHOLDER_LINUX_AMD64_SHA256"
                else
                  url "https://github.com/iskorotkov/cc-statusline/releases/download/$VERSION/cc-statusline-$VERSION-linux-386"
                  sha256 "PLACEHOLDER_LINUX_386_SHA256"
                end
              end
            end

            def install
              bin.install "cc-statusline-$VERSION-*" => "cc-statusline"
              chmod 0755, bin/"cc-statusline"
            end

            test do
              assert_match "panic", shell_output("#{bin}/cc-statusline < /dev/null 2>&1", 1)
            end
          end
          EOF

      - name: Upload Homebrew Formula
        uses: softprops/action-gh-release@v2
        with:
          files: ./cc-statusline.rb
